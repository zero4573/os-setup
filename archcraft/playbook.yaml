- name: Setup Archcraft installation
  hosts: all
  tasks:
    - name: Update pacman cache
      become: true
      become_user: root
      become_method: sudo
      become_flags: -i
      community.general.pacman:
        update_cache: true

    - name: Install all packages via yay
      ansible.builtin.shell: /usr/bin/yay -S --noconfirm {{ item }}
      with_items:
        - vi-vim-symlink
        - snapd
        - asdf-vm
        - jetbrains-toolbox

    # If you have a zshrc, then set it up
    - name: zshrc file stat
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.zshrc"
      register: zshrc

    - name: Setup zshrc
      ansible.builtin.lineinfile:
        path: "{{ zshrc.stat.path }}"
        line: '. /opt/asdf-vm/asdf.sh'
      when: zshrc.stat.exists and zshrc.stat.isreg

    # If you have a bashrc, then set it up
    - name: bashrc file stat
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.bashrc"
      register: bashrc

    - name: Setup bashrc
      ansible.builtin.lineinfile:
        path: "{{ bashrc.stat.path }}"
        line: '. /opt/asdf-vm/asdf.sh'
      when: bashrc.stat.exists and bashrc.stat.isreg

    - name: Install asdf tool dependencies
      become: true
      become_user: root
      become_method: sudo
      become_flags: -i
      community.general.pacman:
        name: 
          - base-devel
          - unixodbc
          - wxwidgets-gtk3
        state: present

    - name: Install asdf tools
      ansible.builtin.shell: |
        source /opt/asdf-vm/asdf.sh
        asdf plugin add {{ item.name }}
        asdf install {{ item.name }} {{ item.version }}
        asdf global {{ item.name }} {{ item.version }}

      with_items:
        - name: awscli
          version: 2.13.11
          global: 2.13.11

        - name: elixir
          version: 1.12.2-otp-24
          global: 1.12.2-otp-24

        - name: erlang
          version: 26.0.2
          global: 26.0.2

        - name: golang
          version: 1.20.6
          global: 1.20.6

        - name: java
          version: openjdk-11.0.2
          global: openjdk-11.0.2

        - name: maven
          version: 3.6.3
          global: 3.6.3

        - name: mongosh
          version: 1.2.3
          global: 1.2.3

        - name: nodejs
          version: 18.13.0
          global: 18.13.0

        - name: packer
          version: 1.7.4
          global: 1.7.4

        - name: python
          version: 3.8.12
          global: 3.8.12

        - name: swag
          version: 1.8.7
          global: 1.8.7

        - name: terraform
          version: 0.15.5
          global: 1.8.7

    - name: Sudo commands
      become: true
      become_user: root
      become_method: sudo
      become_flags: -i
      block:
        - name: Fix brightness up/down issues with i12 frameworks
          ansible.builtin.blockinfile:
            path: "/etc/modprobe.d/framework-als-blacklist.conf"
            marker: "#-- ansible managed --------------------------------------------"
            block: 'blacklist hid_sensor_hub'
            create: true

        - name: Create snap symlink for classic support
          ansible.builtin.file:
            src: /var/lib/snapd/snap
            dest: /snap
            owner: root
            group: root
            state: link

        - name: Enable snapd.socket
          ansible.builtin.systemd:
            name: snapd.socket
            enabled: true
            state: started

        - name: Enable snapd.apparmor
          ansible.builtin.systemd:
            name: snapd.apparmor
            enabled: true
            state: started

        - name: Disable bluetooth by default
          ansible.builtin.systemd:
            name: bluetooth.service
            enabled: false
            state: stopped

        - name: pacman packages
          community.general.pacman:
            state: present
            name:
              - yt-dlp
              - podman
              - podman-compose

        - name: Install all gui applications that don't require classic snap support for installation
          community.general.snap:
            name:
              - whatsdesk
              - brave
              - discord
              - dbeaver-ce
              - remmina
              - insomnia
              - teams-for-linux
              - 1password

        - name: Install all gui applications that require classic snap support for installation
          community.general.snap:
            classic: true
            name:
              - sublime-merge
              - code

        - name: Install all gui applications that are in --edge
          community.general.snap:
            channel: edge
            name:
              - calibre

        # Replace this once evolution becomes available on snap
        - name: Install flatpak for evolution
          community.general.pacman:
            state: present
            name:
              - flatpak

        - name: install evolution via flatpak
          community.general.flatpak:
            state: present
            name: org.gnome.Evolution

        - name: install unityhub via flatpak
          community.general.flatpak:
            state: present
            name: com.unity.UnityHub

        - name: Set default browser to brave
          ansible.builtin.lineinfile:
            path: "/etc/environment"
            search_string: "BROWSER="
            line: 'BROWSER=brave'

        - name: Set default editor to vim
          ansible.builtin.lineinfile:
            path: "/etc/environment"
            search_string: "EDITOR="
            line: 'EDITOR=vim'

    # sway configurations
    - name: sway config file stat
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.config/sway/config"
      register: sway

    - name: Set default sway browser to brave
      ansible.builtin.lineinfile:
        path: "{{ sway.stat.path }}"
        regexp: 'set \$browser .*'
        line: 'set $browser brave'
      when: sway.stat.exists and sway.stat.isreg

    - name: Set default sway editor to vscode
      ansible.builtin.lineinfile:
        path: "{{ sway.stat.path }}"
        regexp: 'set \$editor .*'
        line: 'set $editor code'
      when: sway.stat.exists and sway.stat.isreg

    # hyprland configurations
    - name: hyprland.conf file stat
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.config/hypr/hyprland.conf"
      register: hypr

    - name: Set default hyprland browser to brave
      ansible.builtin.lineinfile:
        path: "{{ hypr.stat.path }}"
        regexp: '\$browser.*'
        line: '$browser = brave'
      when: hypr.stat.exists and hypr.stat.isreg

    - name: Set default hyprland editor to vscode
      ansible.builtin.lineinfile:
        path: "{{ hypr.stat.path }}"
        regexp: '\$editor.*'
        line: '$editor = code'
      when: hypr.stat.exists and hypr.stat.isreg

    - name: Set custom configurations
      ansible.builtin.blockinfile:
        path: "{{ hypr.stat.path }}"
        marker: "#-- ansible managed --------------------------------------------"
        block: |
          exec-once=[workspace 1 silent] /var/lib/snapd/snap/bin/brave
          exec-once=[workspace 2 silent] /var/lib/snapd/snap/bin/discord
          exec-once=[workspace 2 silent] /var/lib/snapd/snap/bin/teams-for-linux
          exec-once=[workspace 2 silent] /var/lib/snapd/snap/bin/whatsdesk
          exec-once=[workspace 2 silent] /var/lib/flatpak/exports/bin/org.gnome.Evolution
          exec-once=[workspace 2 silent] /var/lib/snapd/snap/bin/1password
      when: hypr.stat.exists and hypr.stat.isreg
